from flask_wtf.file import FileAllowed, MultipleFileField
from wtforms.fields.simple import StringField, PasswordField, SubmitField, FileField, BooleanField, TextAreaField
from wtforms.validators import DataRequired, Length, EqualTo, ValidationError,DataRequired, Optional
from flask_wtf import FlaskForm
from wtforms import StringField, SelectField, SubmitField
from app.models.user import User
from app.models.photosession import Category

#регистрация
class RegistrationForm(FlaskForm):  # Исправлено название класса
    name = StringField('ФИО', validators=[DataRequired(), Length(min=2, max=100)])
    login = StringField('Логин', validators=[DataRequired(), Length(min=2, max=20)])
    password = PasswordField('Пароль', validators=[DataRequired()])
    confirm_password = PasswordField('Подтвердите пароль', validators=[DataRequired(), EqualTo('password')])
    avatar = FileField('Загрузить свое фото', validators=[FileAllowed(['jpg', 'jpeg', 'png'])])
    submit = SubmitField('Зарегистрироваться')

    def validate_login(self, login):
        user = User.query.filter_by(login=login.data).first()
        if user:
            raise ValidationError('Логин занят')

#вход
class LoginForm(FlaskForm):
    login = StringField('Логин', validators=[DataRequired(), Length(min=2, max=20)])
    password = PasswordField('Пароль', validators=[DataRequired()])
    remember = BooleanField('Запомнить меня')
    submit = SubmitField('Войти')


#Добавление фотосессии
class CreatePhotosessionForm(FlaskForm):
    title = StringField('Заголовок(title)', validators=[DataRequired(), Length(min=3, max=90)])
    meta_description = StringField('Описание для поисковиков(description)', validators=[Length(min=5, max=210)])
    content = TextAreaField('Текст описание')
    category = SelectField('Категория', choices=[(cat.name, cat.value) for cat in Category],
                           validators=[DataRequired()])
    photos = MultipleFileField('Фотографии', validators=[FileAllowed(['jpg', 'jpeg', 'png', 'webp'])])

#Форма для Идей фотосессий
class GPTForm(FlaskForm):
    category = SelectField('Выберите вариант фотосессии или напишите свой',
                           choices=[
                               ('other', 'Другой (укажите ниже)'),
                               ('Свадебной фотосессии', 'Свадебная фотосессия'),
                               ('Семейная фотосессия', 'Семейная фотосессия'),
                               ('Детская фотосессия', 'Детская фотосессия'),
                               ('Детская фотосессия мальчика', 'Детская фотосессия мальчика'),
                               ('Детская фотосессия девочки', 'Детская фотосессия девочки'),
                               ('Мужская фотосессия', 'Мужская фотосессия'),
                               ('Женская фотосессия', 'Женская фотосессия'),
                               ('Фотосессия для пар', 'Фотосессия для пар'),
                               ('Портретная фотосессия', 'Портретная фотосессия'),
                               ('Фотосессия в студии', 'Фотосессия в студии'),
                               ('Уличная фотосессия', 'Уличная фотосессия'),
                               ('Репортажная фотосессия', 'Репортажная фотосессия'),
                               ('Групповая фотосессия', 'Групповая фотосессия'),
                               ('Фотосессия на выписку', 'Фотосессия на выписку'),
                               ('Фотограф на венчание', 'Фотограф на венчание'),
                               ('Фотограф на крещение', 'Фотограф на крещение'),
                               ('Модельная фотосессия', 'Модельная фотосессия'),
                               ('Фотосессия в стиле ню', 'Фотосессия в стиле ню'),
                               ('Новогодняя фотосессия', 'Новогодняя фотосессия'),
                               ('Тематическая фотосессия', 'Тематическая фотосессия'),
                               ('Фотосессия с животными', 'Фотосессия с животными'),
                               ('Фотосессия для беременных', 'Фотосессия для беременных'),
                               ('Романтическая фотосессия', 'Романтическая фотосессия'),
                               ('Фотосессия на пляже', 'Фотосессия на пляже'),
                               ('Фотосессия на природе', 'Фотосессия на природе'),
                               ('Фотосессия с автомобилем', 'Фотосессия с автомобилем'),
                               ('Fashion-фотосессия', 'Fashion-фотосессия'),
                               ('Лавстори', 'Лавстори'),
                               ('Фотосессия на празднике', 'Фотосессия на празднике'),
                               ('Фотосессия на корпоративе', 'Фотосессия на корпоративе'),
                               ('Бьюти-фотосессия', 'Бьюти-фотосессия'),
                               ('Экстремальная фотосессия (например, с элементами спорта)',
                                'Экстремальная фотосессия (например, с элементами спорта)')
                           ],
                           validators=[DataRequired()])
    custom_category = StringField('Введите свою категорию', validators=[Optional()])

    style = SelectField('Выберите или напишите свой стиль',
                        choices=[
                            ('other', 'Другой (укажите ниже)'),
                            ('Классический – традиционные, строгие кадры, часто с простыми позами и фоном как у Richard Avedon или Annie Leibovitz.',
                             'Классический – традиционные, строгие кадры, часто с простыми позами и фоном.'),
                            ('Ретро – вдохновение стилем и модой прошлого, например, 20-е или 60-е годы как у Irving Penn или Cecil Beaton.',
                             'Ретро – вдохновение стилем и модой прошлого, например, 20-е или 60-е годы.'),
                            ('Бохо – стиль, наполненный элементами природы, легкостью, этническими мотивами как у Ryan McGinley или Jose Villa.',
                             'Бохо – стиль, наполненный элементами природы, легкостью, этническими мотивами.'),
                            ('Гламур – яркий, роскошный стиль с акцентом на красоту и моду как у Mario Testino или Helmut Newton.',
                             'Гламур – яркий, роскошный стиль с акцентом на красоту и моду.'),
                            ('Минимализм – простота и лаконичность, минимальное количество деталей как у Andreas Gursky или Hiroshi Sugimoto.',
                             'Минимализм – простота и лаконичность, минимальное количество деталей.'),
                            ('Модерн – современные линии, необычные ракурсы и композиции как у Steven Meisel или Juergen Teller.',
                             'Модерн – современные линии, необычные ракурсы и композиции.'),
                            ('Фэшн (Fashion) – акцент на одежде и модных аксессуарах, модельные позы как у Patrick Demarchelier или Peter Lindbergh.',
                             'Фэшн (Fashion) – акцент на одежде и модных аксессуарах, модельные позы.'),
                            ('Натюрель – естественные кадры, подчеркивающие натуральную красоту как у Sally Mann или Dorothea Lange.',
                             'Натюрель – естественные кадры, подчеркивающие натуральную красоту.'),
                            ('Гранж – грубые, нарочито небрежные образы, ассоциирующиеся с панк-культурой как у Corinne Day или Glen Luchford.',
                             'Гранж – грубые, нарочито небрежные образы, ассоциирующиеся с панк-культурой.'),
                            (
                            'Винтаж – фотографии, стилизованные под старину, с мягкими тонами и антикварной атмосферой как у Sarah Moon или Tim Walker.',
                            'Винтаж – фотографии, стилизованные под старину, с мягкими тонами и антикварной атмосферой.'),
                            ('Романтический – нежные и чувственные образы, мягкий свет и пастельные цвета как у Elizabeth Messina или David Hamilton.',
                             'Романтический – нежные и чувственные образы, мягкий свет и пастельные цвета.'),
                            ('Урбанистический – стиль городских пейзажей, использование индустриальных фонов как у Berenice Abbott или William Klein.',
                             'Урбанистический – стиль городских пейзажей, использование индустриальных фонов.'),
                            (
                            'Чёрно-белая фотография – монохромные кадры, которые акцентируют внимание на текстурах и эмоциях как у Ansel Adams или Henri Cartier-Bresson.',
                            'Чёрно-белая фотография – монохромные кадры, которые акцентируют внимание на текстурах и эмоциях.'),
                            (
                            'Киношный (Cinematic) – стиль, имитирующий кадры из фильмов с кинематографическим светом и цветом как у Gregory Crewdson или Alex Prager.',
                            'Киношный – стиль, имитирующий кадры из фильмов с кинематографическим светом и цветом.'),
                            ('Авангард – эксперименты с формами, цветами, необычные образы и сюрреализм как у Man Ray или Guy Bourdin.',
                             'Авангард – эксперименты с формами, цветами, необычные образы и сюрреализм.'),
                            ('Готический – темные, мистические образы с элементами готической культуры как у Tim Burton или Eugenio Recuenco.',
                             'Готический – темные, мистические образы с элементами готической культуры.'),
                            ('Эко (Eco) – фотосессии на природе с акцентом на гармонию с окружающей средой как у Ansel Adams или Chris Burkard.',
                             'Эко – фотосессии на природе с акцентом на гармонию с окружающей средой.'),
                            ('Фэнтези – фантазийные образы, магические миры, сказочные персонажи как у Annie Leibovitz или Tim Walker.',
                             'Фэнтези – фантазийные образы, магические миры, сказочные персонажи.'),
                            ('Спортивный – акцент на динамике и движении, спортивные позы и атрибутика как у Walter Iooss или Neil Leifer.',
                             'Спортивный – акцент на динамике и движении, спортивные позы и атрибутика.'),
                            ( 'Индустриальный – стиль с использованием фабрик, заводов и промышленных объектов как у Bernd и Hilla Becher.',
                             'Индустриальный – стиль с использованием фабрик, заводов и промышленных объектов.'),
                            ('other', 'Другой (укажите ниже)')
                        ],
                        validators=[DataRequired()])

    custom_style = StringField('Введите свой стиль', validators=[Optional()])

    place = SelectField('Выберите место или напишите свое',
                        choices=[
                            ('other', 'Другой (укажите ниже)'),
                            ('Дома или квартире', 'Дома или квартире'),
                            ('На кухне', 'На кухне'),
                            ('В кабинете', 'В кабинете'),
                            ('В детской комнате', 'В детской комнате'),
                            ('В гостиной', 'В гостиной'),
                            ('В храме', 'В храме'),
                            ('В ресторане', 'В ресторане'),
                            ('На Комсомольском пруду', 'На пруду'),
                            ('В парке', 'В парке'),
                            ('На природе (лес, поляна, река)', 'На природе (лес, поляна, река)'),
                            ('В баре', 'В баре'),
                            ('На крыше здания', 'На крыше здания'),
                            ('На вокзале', 'На вокзале'),
                            ('В библиотеке', 'В библиотеке'),
                            ('В музее', 'В музее'),
                            ('На пляже', 'На пляже'),
                            ('В горах', 'В горах'),
                            ('На стадионе Динамо в Ставрополе', 'На стадионе'),
                            ('На мосту', 'На мосту'),
                            ('В заброшенном здании', 'В заброшенном здании'),
                            ('На ферме', 'На ферме'),
                            ('На городской улице (стены с граффити, брусчатка)',
                             'На городской улице (стены с граффити, брусчатка)'),
                            ('На лодочной станции на пруду', 'На лодочной станции'),
                            ('В фотостудии', 'В фотостудии'),
                            ('На набережной', 'На набережной'),
                            ('На железнодорожных путях', 'На железнодорожных путях'),
                            ('В торговом центре', 'В торговом центре'),
                            ('На лестнице (в подъезде, парке)', 'На лестнице (в подъезде, парке)'),
                            ('В ботаническом саду', 'В ботаническом саду'),
                            ('На футбольном поле', 'На футбольном поле'),
                            ('На площади города', 'На площади города'),
                            ('На детской площадке', 'На детской площадке'),
                            ('В оранжерее', 'В оранжерее'),
                            ('В кафе', 'В кафе'),
                            ('На автостоянке', 'На автостоянке'),
                            ('В аэропорту', 'В аэропорту'),
                            ('На винограднике', 'На винограднике'),
                            ('На фермерском рынке', 'На фермерском рынке'),
                            ('На аттракционах или в парке развлечений', 'На аттракционах или в парке развлечений'),
                            ('В отеле (интерьеры, балконы)', 'В отеле (интерьеры, балконы)')
                        ],
                        validators=[DataRequired()])

    custom_place = StringField('Введите свое место', validators=[Optional()])

    # Кнопка отправки формы
    free_text = StringField('Добавте свои идеи и виденье. Возраст детей, аксессуары, вещи, что угодно...')
    submit = SubmitField('Отправить')

    def validate(self, extra_validators=None):
        if not super().validate(extra_validators=extra_validators):
            return False

        # Если категория 'other', проверяем наличие пользовательского ввода
        if self.category.data == 'other':
            if not self.custom_category.data:
                self.custom_category.errors.append('Пожалуйста, укажите свою категорию.')
                return False
            # Заменяем значение category на пользовательское
            self.category.data = self.custom_category.data

        # Аналогичная проверка для стиля
        if self.style.data == 'other':
            if not self.custom_style.data:
                self.custom_style.errors.append('Пожалуйста, укажите свой стиль.')
                return False
            # Заменяем значение style на пользовательское
            self.style.data = self.custom_style.data

        # Аналогичная проверка для места
        if self.place.data == 'other':
            if not self.custom_place.data:
                self.custom_place.errors.append('Пожалуйста, укажите своё место.')
                return False
            # Заменяем значение place на пользовательское
            self.place.data = self.custom_place.data

        return True
